using BaroquenMelody.Library.Domain;
using BaroquenMelody.Library.Ornamentation.Enums;

namespace BaroquenMelody.Library.Ornamentation.Cleaning.Engine.Selection.Strategies;

internal sealed class CleanTargetOrnamentation : IOrnamentationCleaningSelectorStrategy
{
    public BaroquenNote? Select(BaroquenNote note, BaroquenNote otherNote) => SelectInternal(note, otherNote) ?? SelectInternal(otherNote, note);

#pragma warning disable MA0051
    private static BaroquenNote? SelectInternal(BaroquenNote note, BaroquenNote otherNote) => (note.OrnamentationType, otherNote.OrnamentationType) switch
#pragma warning restore MA0051
    {
        (OrnamentationType.DecorateInterval, OrnamentationType.DelayedDoublePassingTone) => note,
        (OrnamentationType.DecorateInterval, OrnamentationType.DelayedNeighborTone) => otherNote,
        (OrnamentationType.DecorateInterval, OrnamentationType.DelayedPassingTone) => otherNote,
        (OrnamentationType.DecorateInterval, OrnamentationType.DelayedPickup) => otherNote,
        (OrnamentationType.DecorateInterval, OrnamentationType.DelayedRepeatedNote) => otherNote,
        (OrnamentationType.DecorateInterval, OrnamentationType.DelayedRun) => otherNote,
        (OrnamentationType.DecorateInterval, OrnamentationType.DoublePassingTone) => note,
        (OrnamentationType.DecorateInterval, OrnamentationType.DoubleRun) => note,
        (OrnamentationType.DecorateInterval, OrnamentationType.DoubleInvertedTurn) => note,
        (OrnamentationType.DecorateInterval, OrnamentationType.InvertedTurn) => otherNote,
        (OrnamentationType.DecorateInterval, OrnamentationType.Mordent) => otherNote,
        (OrnamentationType.DecorateInterval, OrnamentationType.NeighborTone) => otherNote,
        (OrnamentationType.DecorateInterval, OrnamentationType.PassingTone) => otherNote,
        (OrnamentationType.DecorateInterval, OrnamentationType.Pedal) => note,
        (OrnamentationType.DecorateInterval, OrnamentationType.Pickup) => otherNote,
        (OrnamentationType.DecorateInterval, OrnamentationType.RepeatedNote) => otherNote,
        (OrnamentationType.DecorateInterval, OrnamentationType.Run) => otherNote,
        (OrnamentationType.DecorateInterval, OrnamentationType.Turn) => otherNote,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.DelayedNeighborTone) => otherNote,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.DelayedPassingTone) => otherNote,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.DelayedPickup) => otherNote,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.DelayedRepeatedNote) => otherNote,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.DelayedRun) => note,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.DoublePassingTone) => otherNote,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.DoubleRun) => note,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.DoubleInvertedTurn) => note,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.InvertedTurn) => note,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.Mordent) => otherNote,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.NeighborTone) => otherNote,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.PassingTone) => otherNote,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.Pedal) => note,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.Pickup) => note,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.RepeatedNote) => otherNote,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.Run) => note,
        (OrnamentationType.DelayedDoublePassingTone, OrnamentationType.Turn) => note,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.DelayedPassingTone) => note,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.DelayedPickup) => note,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.DelayedRepeatedNote) => otherNote,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.DelayedRun) => note,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.DoublePassingTone) => note,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.DoubleRun) => note,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.DoubleInvertedTurn) => note,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.InvertedTurn) => note,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.Mordent) => otherNote,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.NeighborTone) => note,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.PassingTone) => note,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.Pedal) => note,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.Pickup) => note,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.RepeatedNote) => otherNote,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.Run) => note,
        (OrnamentationType.DelayedNeighborTone, OrnamentationType.Turn) => note,
        (OrnamentationType.DelayedPassingTone, OrnamentationType.DelayedPickup) => otherNote,
        (OrnamentationType.DelayedPassingTone, OrnamentationType.DelayedRepeatedNote) => otherNote,
        (OrnamentationType.DelayedPassingTone, OrnamentationType.DelayedRun) => note,
        (OrnamentationType.DelayedPassingTone, OrnamentationType.DoublePassingTone) => note,
        (OrnamentationType.DelayedPassingTone, OrnamentationType.DoubleRun) => note,
        (OrnamentationType.DelayedPassingTone, OrnamentationType.DoubleInvertedTurn) => note,
        (OrnamentationType.DelayedPassingTone, OrnamentationType.InvertedTurn) => note,
        (OrnamentationType.DelayedPassingTone, OrnamentationType.Mordent) => otherNote,
        (OrnamentationType.DelayedPassingTone, OrnamentationType.NeighborTone) => otherNote,
        (OrnamentationType.DelayedPassingTone, OrnamentationType.PassingTone) => note,
        (OrnamentationType.DelayedPassingTone, OrnamentationType.Pedal) => note,
        (OrnamentationType.DelayedPassingTone, OrnamentationType.Pickup) => note,
        (OrnamentationType.DelayedPassingTone, OrnamentationType.RepeatedNote) => otherNote,
        (OrnamentationType.DelayedPassingTone, OrnamentationType.Run) => note,
        (OrnamentationType.DelayedPassingTone, OrnamentationType.Turn) => note,
        (OrnamentationType.DelayedPickup, OrnamentationType.DelayedRepeatedNote) => otherNote,
        (OrnamentationType.DelayedPickup, OrnamentationType.DelayedRun) => note,
        (OrnamentationType.DelayedPickup, OrnamentationType.DoublePassingTone) => note,
        (OrnamentationType.DelayedPickup, OrnamentationType.DoubleRun) => note,
        (OrnamentationType.DelayedPickup, OrnamentationType.DoubleInvertedTurn) => note,
        (OrnamentationType.DelayedPickup, OrnamentationType.InvertedTurn) => note,
        (OrnamentationType.DelayedPickup, OrnamentationType.Mordent) => otherNote,
        (OrnamentationType.DelayedPickup, OrnamentationType.NeighborTone) => otherNote,
        (OrnamentationType.DelayedPickup, OrnamentationType.PassingTone) => note,
        (OrnamentationType.DelayedPickup, OrnamentationType.Pedal) => note,
        (OrnamentationType.DelayedPickup, OrnamentationType.Pickup) => note,
        (OrnamentationType.DelayedPickup, OrnamentationType.RepeatedNote) => otherNote,
        (OrnamentationType.DelayedPickup, OrnamentationType.Run) => note,
        (OrnamentationType.DelayedPickup, OrnamentationType.Turn) => note,
        (OrnamentationType.DelayedRepeatedNote, OrnamentationType.DelayedRun) => note,
        (OrnamentationType.DelayedRepeatedNote, OrnamentationType.DoublePassingTone) => note,
        (OrnamentationType.DelayedRepeatedNote, OrnamentationType.DoubleRun) => note,
        (OrnamentationType.DelayedRepeatedNote, OrnamentationType.DoubleInvertedTurn) => note,
        (OrnamentationType.DelayedRepeatedNote, OrnamentationType.InvertedTurn) => note,
        (OrnamentationType.DelayedRepeatedNote, OrnamentationType.Mordent) => otherNote,
        (OrnamentationType.DelayedRepeatedNote, OrnamentationType.NeighborTone) => note,
        (OrnamentationType.DelayedRepeatedNote, OrnamentationType.PassingTone) => note,
        (OrnamentationType.DelayedRepeatedNote, OrnamentationType.Pedal) => note,
        (OrnamentationType.DelayedRepeatedNote, OrnamentationType.Pickup) => note,
        (OrnamentationType.DelayedRepeatedNote, OrnamentationType.RepeatedNote) => note,
        (OrnamentationType.DelayedRepeatedNote, OrnamentationType.Run) => note,
        (OrnamentationType.DelayedRepeatedNote, OrnamentationType.Turn) => note,
        (OrnamentationType.DelayedRun, OrnamentationType.DoublePassingTone) => otherNote,
        (OrnamentationType.DelayedRun, OrnamentationType.DoubleRun) => note,
        (OrnamentationType.DelayedRun, OrnamentationType.DoubleInvertedTurn) => note,
        (OrnamentationType.DelayedRun, OrnamentationType.InvertedTurn) => note,
        (OrnamentationType.DelayedRun, OrnamentationType.Mordent) => otherNote,
        (OrnamentationType.DelayedRun, OrnamentationType.NeighborTone) => otherNote,
        (OrnamentationType.DelayedRun, OrnamentationType.PassingTone) => otherNote,
        (OrnamentationType.DelayedRun, OrnamentationType.Pedal) => note,
        (OrnamentationType.DelayedRun, OrnamentationType.Pickup) => otherNote,
        (OrnamentationType.DelayedRun, OrnamentationType.RepeatedNote) => otherNote,
        (OrnamentationType.DelayedRun, OrnamentationType.Run) => otherNote,
        (OrnamentationType.DelayedRun, OrnamentationType.Turn) => note,
        (OrnamentationType.DoublePassingTone, OrnamentationType.DoubleRun) => note,
        (OrnamentationType.DoublePassingTone, OrnamentationType.DoubleInvertedTurn) => note,
        (OrnamentationType.DoublePassingTone, OrnamentationType.InvertedTurn) => note,
        (OrnamentationType.DoublePassingTone, OrnamentationType.Mordent) => otherNote,
        (OrnamentationType.DoublePassingTone, OrnamentationType.NeighborTone) => otherNote,
        (OrnamentationType.DoublePassingTone, OrnamentationType.PassingTone) => otherNote,
        (OrnamentationType.DoublePassingTone, OrnamentationType.Pedal) => note,
        (OrnamentationType.DoublePassingTone, OrnamentationType.Pickup) => otherNote,
        (OrnamentationType.DoublePassingTone, OrnamentationType.RepeatedNote) => otherNote,
        (OrnamentationType.DoublePassingTone, OrnamentationType.Run) => note,
        (OrnamentationType.DoublePassingTone, OrnamentationType.Turn) => otherNote,
        (OrnamentationType.DoubleRun, OrnamentationType.DoubleInvertedTurn) => otherNote,
        (OrnamentationType.DoubleRun, OrnamentationType.InvertedTurn) => otherNote,
        (OrnamentationType.DoubleRun, OrnamentationType.Mordent) => otherNote,
        (OrnamentationType.DoubleRun, OrnamentationType.NeighborTone) => otherNote,
        (OrnamentationType.DoubleRun, OrnamentationType.PassingTone) => otherNote,
        (OrnamentationType.DoubleRun, OrnamentationType.Pedal) => note,
        (OrnamentationType.DoubleRun, OrnamentationType.Pickup) => otherNote,
        (OrnamentationType.DoubleRun, OrnamentationType.RepeatedNote) => otherNote,
        (OrnamentationType.DoubleRun, OrnamentationType.Run) => otherNote,
        (OrnamentationType.DoubleRun, OrnamentationType.Turn) => otherNote,
        (OrnamentationType.DoubleInvertedTurn, OrnamentationType.InvertedTurn) => otherNote,
        (OrnamentationType.DoubleInvertedTurn, OrnamentationType.Mordent) => otherNote,
        (OrnamentationType.DoubleInvertedTurn, OrnamentationType.NeighborTone) => otherNote,
        (OrnamentationType.DoubleInvertedTurn, OrnamentationType.PassingTone) => otherNote,
        (OrnamentationType.DoubleInvertedTurn, OrnamentationType.Pedal) => note,
        (OrnamentationType.DoubleInvertedTurn, OrnamentationType.Pickup) => otherNote,
        (OrnamentationType.DoubleInvertedTurn, OrnamentationType.RepeatedNote) => otherNote,
        (OrnamentationType.DoubleInvertedTurn, OrnamentationType.Run) => otherNote,
        (OrnamentationType.DoubleInvertedTurn, OrnamentationType.Turn) => otherNote,
        (OrnamentationType.InvertedTurn, OrnamentationType.Mordent) => otherNote,
        (OrnamentationType.InvertedTurn, OrnamentationType.NeighborTone) => otherNote,
        (OrnamentationType.InvertedTurn, OrnamentationType.PassingTone) => otherNote,
        (OrnamentationType.InvertedTurn, OrnamentationType.Pedal) => otherNote,
        (OrnamentationType.InvertedTurn, OrnamentationType.Pickup) => otherNote,
        (OrnamentationType.InvertedTurn, OrnamentationType.RepeatedNote) => otherNote,
        (OrnamentationType.InvertedTurn, OrnamentationType.Run) => otherNote,
        (OrnamentationType.InvertedTurn, OrnamentationType.Turn) => otherNote,
        (OrnamentationType.Mordent, OrnamentationType.NeighborTone) => note,
        (OrnamentationType.Mordent, OrnamentationType.PassingTone) => note,
        (OrnamentationType.Mordent, OrnamentationType.Pedal) => note,
        (OrnamentationType.Mordent, OrnamentationType.Pickup) => note,
        (OrnamentationType.Mordent, OrnamentationType.RepeatedNote) => note,
        (OrnamentationType.Mordent, OrnamentationType.Run) => note,
        (OrnamentationType.Mordent, OrnamentationType.Turn) => note,
        (OrnamentationType.NeighborTone, OrnamentationType.PassingTone) => note,
        (OrnamentationType.NeighborTone, OrnamentationType.Pedal) => note,
        (OrnamentationType.NeighborTone, OrnamentationType.Pickup) => note,
        (OrnamentationType.NeighborTone, OrnamentationType.RepeatedNote) => otherNote,
        (OrnamentationType.NeighborTone, OrnamentationType.Run) => note,
        (OrnamentationType.NeighborTone, OrnamentationType.Turn) => note,
        (OrnamentationType.PassingTone, OrnamentationType.Pedal) => note,
        (OrnamentationType.PassingTone, OrnamentationType.Pickup) => note,
        (OrnamentationType.PassingTone, OrnamentationType.RepeatedNote) => otherNote,
        (OrnamentationType.PassingTone, OrnamentationType.Run) => note,
        (OrnamentationType.PassingTone, OrnamentationType.Turn) => note,
        (OrnamentationType.Pedal, OrnamentationType.Pickup) => otherNote,
        (OrnamentationType.Pedal, OrnamentationType.RepeatedNote) => otherNote,
        (OrnamentationType.Pedal, OrnamentationType.Run) => otherNote,
        (OrnamentationType.Pedal, OrnamentationType.Turn) => otherNote,
        (OrnamentationType.Pickup, OrnamentationType.RepeatedNote) => otherNote,
        (OrnamentationType.Pickup, OrnamentationType.Run) => note,
        (OrnamentationType.Pickup, OrnamentationType.Turn) => note,
        (OrnamentationType.RepeatedNote, OrnamentationType.Run) => note,
        (OrnamentationType.RepeatedNote, OrnamentationType.Turn) => note,
        (OrnamentationType.Run, OrnamentationType.Turn) => note,
        _ => null
    };
}
