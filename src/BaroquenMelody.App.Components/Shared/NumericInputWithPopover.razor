@typeparam T

<AutoClosePopover IsPopoverOpen="IsPopoverOpen"
                  OnPopoverClosed="@(() => IsPopoverOpen = false)">
    <PopoverContent>
        @PopoverContent
    </PopoverContent>
</AutoClosePopover>
<MudNumericField T="T" 
                 OnAdornmentClick="OpenMeterPopover" 
                 AdornmentIcon="@Icons.Material.Outlined.QuestionMark" 
                 Adornment="Adornment.End" 
                 IconSize="Size.Small" 
                 Variant="Variant.Outlined"
                 Value="Value" 
                 Label="@Label" 
                 ValueChanged="ValueChanged"
                 Min="Min"
                 Max="Max"
                 Disabled="IsDisabled"/>

@code
{
    [Parameter, EditorRequired] public required RenderFragment PopoverContent { get; set; }

    [Parameter, EditorRequired] public required string Label { get; set; }

    [Parameter, EditorRequired] public required Func<T> ValueProvider { get; set; }

    [Parameter, EditorRequired] public required EventCallback<T> ValueChanged { get; set; }

    [Parameter] public T? Min { get; set; }

    [Parameter] public T? Max { get; set; }

    [Parameter] public bool IsDisabled { get; set; } = false;

    private void OpenMeterPopover() => IsPopoverOpen = true;

    private bool IsPopoverOpen;

    private T Value => ValueProvider();
}
