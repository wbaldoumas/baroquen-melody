<MudCardHeader>
    <CardHeaderContent>
        <MudGrid Spacing="1">
            <MudItem xs="12" sm="8" md="8">
                <MudText Typo="Typo.h6">@HeaderText</MudText>
            </MudItem>
            <MudItem xs="12" sm="4" md="4">
                <div class="d-none d-sm-flex justify-end">
                    <MudStack Row="false" Justify="Justify.FlexEnd" Spacing="1">
                        <MudSwitch T="bool"
                                   Label="Enable"
                                   Value="IsEnabled"
                                   Color="Color.Tertiary"
                                   LabelPosition="LabelPosition.Start"
                                   ThumbIcon="@IsEnabledIcon"
                                   ThumbIconColor="Color.Dark"
                                   ValueChanged="IsEnabledChanged"/>
                        <MudSwitch T="bool"
                                   Label="Lock"
                                   Value="IsLocked"
                                   Color="Color.Primary"
                                   LabelPosition="LabelPosition.Start"
                                   ThumbIconColor="Color.Dark"
                                   ThumbIcon="@IsLockedIcon"
                                   ValueChanged="IsLockedChanged"/>
                    </MudStack>
                </div>
                <div class="d-sm-none">
                    <MudStack Row="true" Justify="Justify.SpaceEvenly" Spacing="1">
                        <MudSwitch T="bool"
                                   Label="Enable"
                                   Value="IsEnabled"
                                   Color="Color.Tertiary"
                                   LabelPosition="LabelPosition.Start"
                                   ThumbIconColor="Color.Dark"
                                   ThumbIcon="@IsEnabledIcon"
                                   ValueChanged="IsEnabledChanged"/>
                        <MudSwitch T="bool"
                                   Label="Lock"
                                   Value="IsLocked"
                                   Color="Color.Info"
                                   LabelPosition="LabelPosition.Start"
                                   ThumbIconColor="Color.Dark"
                                   ThumbIcon="@IsLockedIcon"
                                   ValueChanged="IsLockedChanged"/>
                    </MudStack>
                </div>
            </MudItem>
        </MudGrid>
    </CardHeaderContent>
</MudCardHeader>

@code
{
    [Parameter, EditorRequired] public required string HeaderText { get; set; }

    [Parameter, EditorRequired] public required ConfigurationStatus ConfigurationStatus { get; set; } = ConfigurationStatus.Enabled;

    [Parameter, EditorRequired] public required EventCallback<ConfigurationStatus> ValueChanged { get; set; }

    private bool IsEnabled => ConfigurationStatus.HasFlag(ConfigurationStatus.Enabled);

    private bool IsLocked => ConfigurationStatus.HasFlag(ConfigurationStatus.Locked);

    private string IsEnabledIcon => IsEnabled ? Icons.Material.Sharp.MusicNote : Icons.Material.Sharp.MusicOff;

    private string IsLockedIcon => IsLocked ? Icons.Material.Sharp.Lock : Icons.Material.Sharp.LockOpen;

    private void IsEnabledChanged(bool isEnabled)
    {
        if (isEnabled)
        {
            ConfigurationStatus |= ConfigurationStatus.Enabled;
        }
        else
        {
            ConfigurationStatus &= ~ConfigurationStatus.Enabled;
        }

        ValueChanged.InvokeAsync(ConfigurationStatus);
    }

    private void IsLockedChanged(bool isLocked)
    {
        if (isLocked)
        {
            ConfigurationStatus |= ConfigurationStatus.Locked;
        }
        else
        {
            ConfigurationStatus &= ~ConfigurationStatus.Locked;
        }

        ValueChanged.InvokeAsync(ConfigurationStatus);
    }
}
